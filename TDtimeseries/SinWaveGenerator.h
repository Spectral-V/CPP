//
// Created by victor murris on 20/11/2024.
//

#ifndef SINWAVEGENERATOR_H
#define SINWAVEGENERATOR_H

#include "TimeSeriesGenerator.h"
#include <vector>

/**
 * @class SinWaveGenerator
 * @brief Generates a sine wave time series based on specified amplitude, frequency, and phase.
 */
class SinWaveGenerator : public TimeSeriesGenerator {
 /**
  * @brief Represents the amplitude of the sine wave.
  *
  * The amplitude controls the peak value of the sine wave generated by the SinWaveGenerator.
  * It is a critical parameter that dictates the height of the wave peaks and the depth of the wave troughs.
  * This value typically should be a positive number.
  */
private:
    double amplitude;
 /**
  * Frequency of the sinusoidal wave.
  *
  * The frequency determines the rate at which the oscillations occur over time.
  * A higher frequency results in more oscillations per unit of time, while a lower frequency results in fewer oscillations per unit of time.
  * It directly affects the generated sine wave's period, which is the reciprocal of the frequency.
  */
 double frequency;
 /**
  * The phase offset of the sine wave in radians. It shifts the sine function
  * horizontally along the x-axis, allowing the generated sine wave to start
  * from a different point in its cycle.
  */
 double phase;
 /**
  * Default constructor for the SinWaveGenerator class.
  *
  * Initializes a new instance of the SinWaveGenerator with default values for
  * amplitude, frequency, and phase.
  *
  * @return A new instance of SinWaveGenerator with default parameters.
  */
public:
    SinWaveGenerator();

 /**
  * Constructs a SinWaveGenerator with the specified seed, amplitude, frequency, and phase.
  *
  * @param seed The seed value for the random number generator.
  * @param amplitude The amplitude of the sine wave.
  * @param frequency The frequency of the sine wave.
  * @param phase The phase shift of the sine wave.
  * @return A new instance of SinWaveGenerator.
  */
 SinWaveGenerator(int seed, double amplitude, double frequency, double phase);

    /**
     * Generates a time series of sine wave values with a specified size.
     *
     * @param size The number of points in the generated time series.
     * @return A vector of doubles containing the generated sine wave values.
     */
    std::vector<double> generateTimeSeries(int size) override;

    /**
     * Destructor for the SinWaveGenerator class.
     *
     * Cleans up any resources or memory used by the SinWaveGenerator instance.
     * This destructor does not have any specific implementation since the class
     * does not dynamically allocate any resources that need explicit deallocation.
     */
    ~SinWaveGenerator() {}
};

#endif // SINWAVEGENERATOR_H

